name: CI/CD

on:
    push:
        branches:
            - master
    workflow_dispatch:

permissions:
    contents: write
    pull-requests: write

jobs:
    build-linux:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Review Code
              uses: reviewdog/action-setup@v1
              with:
                  reviewdog_version: latest

            - name: Install dependencies
              run: |
                  sudo apt update
                  sudo apt install build-essential gcc-12 libgl1-mesa-glx libgl1-mesa-dev libglew-dev ninja-build python3-pip libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxdmcp-dev libxext-dev libxfixes-dev libxft-dev libxi-dev libxinerama-dev libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxrender-dev libxres-dev libxss-dev libxt-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev xtrans-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev xkb-data libxcb-dri3-dev uuid-dev libxcb-util-dev
                  sudo pip install conan

            - name: Detect Conan profile
              run: |
                  conan profile detect --force

            - name: Restore conan cache
              id: github-cache-conan-restore
              uses: actions/cache/restore@v3
              with:
                  path: /home/runner/.conan2
                  key: host-${{ runner.os }}-${{ hashFiles('conanfile.py') }}

            - name: Install Conan dependencies
              run: |
                  mkdir -p build
                  conan install . --output-folder=build --build=missing

            - name: Build
              run: |
                  cd build
                  CXX=g++-12 cmake .. -G Ninja -DCMAKE_TOOLCHAIN_FILE=conan_toolchain.cmake -DCMAKE_BUILD_TYPE:STRING=Release -DRAWRBOX_OUTPUT_BIN="bin"
                  ninja

            - name: Cache conan
              id: github-cache-conan
              uses: actions/cache@v3
              env:
                  cache-name: cache-conan-modules
              with:
                  path: /home/runner/.conan2
                  key: host-${{ runner.os }}-${{ hashFiles('conanfile.py') }}
