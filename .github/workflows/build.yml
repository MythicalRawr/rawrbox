name: CI/CD - BUILD

on:
    pull_request:
    workflow_dispatch:

permissions:
    contents: write
    actions: write
    checks: write
    pull-requests: write
    discussions: write
    issues: write

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
    build-linux:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Install dependencies
              run: |
                  sudo apt update
                  sudo apt install build-essential gcc-12 libgl1-mesa-glx libgl1-mesa-dev libglew-dev ninja-build python3-pip libx11-dev libx11-xcb-dev libfontenc-dev libice-dev libsm-dev libxau-dev libxaw7-dev libxcomposite-dev libxcursor-dev libxdamage-dev libxdmcp-dev libxext-dev libxfixes-dev libxft-dev libxi-dev libxinerama-dev libxkbfile-dev libxmu-dev libxmuu-dev libxpm-dev libxrandr-dev libxrender-dev libxres-dev libxss-dev libxt-dev libxtst-dev libxv-dev libxvmc-dev libxxf86vm-dev xtrans-dev libxcb-render0-dev libxcb-render-util0-dev libxcb-xkb-dev libxcb-icccm4-dev libxcb-image0-dev libxcb-keysyms1-dev libxcb-randr0-dev libxcb-shape0-dev libxcb-sync-dev libxcb-xfixes0-dev libxcb-xinerama0-dev xkb-data libxcb-dri3-dev uuid-dev libxcb-util-dev

            - name: Restore cache
              id: github-cache-restore
              uses: actions/cache/restore@v3
              with:
                  path: |
                      ./build
                      ~/cpm-cache
                  key: host-${{ runner.os }}-${{ hashFiles('**/*/CMakeLists.txt') }}

            - name: Build
              id: build
              run: |
                  mkdir -p build && cd build
                  CXX=g++-12 cmake .. -G Ninja -DCMAKE_BUILD_TYPE:STRING=Release -DRAWRBOX_OUTPUT_BIN="bin" -DCMAKE_EXPORT_COMPILE_COMMANDS="ON"
                  ninja

            - name: Cache build
              id: github-cache
              uses: actions/cache/save@v3
              if: steps.build.outputs.exit_code == 0
              env:
                  cache-name: cache-build
              with:
                  path: |
                      ./build
                      ~/cpm-cache
                  key: host-${{ runner.os }}-${{ hashFiles('**/*/CMakeLists.txt') }}

            - name: Run tests
              run: |
                  cd build
                  ctest --test-dir ./math --output-on-failure
                  ctest --test-dir ./utils --output-on-failure
                  ctest --test-dir ./render --output-on-failure
                  ctest --test-dir ./engine --output-on-failure
                  ctest --test-dir ./debug --output-on-failure

            - name: Run linter
              uses: cpp-linter/cpp-linter-action@v2
              id: linter
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  style: file
                  files-changed-only: true
                  tidy-checks: ''
                  extra-args: '-std=c++20 -Wall'
                  version: '16'
                  database: './build/'
                  thread-comments: true
                  ignore: 'build | .github | stb | deps'
