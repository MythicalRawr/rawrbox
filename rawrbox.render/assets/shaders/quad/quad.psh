#include <correction.fxh>
#include <pixel_bindless_uniforms.fxh>

Texture2DArray    g_Textures[];
SamplerState      g_Textures_sampler;

struct PSInput {
    float4 Pos   : SV_POSITION;
    float2 UV    : TEX_COORD;
};

struct PSOutput {
    float4 Color : SV_TARGET;
};

void main(in PSInput PSIn, out PSOutput PSOut) {
#if defined(DESKTOP_GL) || defined(GL_ES)
    float2 UV = float2(PSIn.UV.x, 1.0 - PSIn.UV.y);
#else
    float2 UV = PSIn.UV;
#endif

    float4 color = g_Textures[Constants.textureIDs.x].Sample(g_Textures_sampler, float3(UV, 0));
    if(color.a <= 0.0) discard;

    PSOut.Color = toLinear(color);
}
