
#include <unlit_pixel_uniforms.fxh>

//Texture2DArray g_Textures[TOTAL_TEXTURES];
Texture2DArray g_Textures[];
SamplerState   g_Textures_sampler; // By convention, texture samplers must use the '_sampler' suffix

struct PSInput {
    float4 Pos                      : SV_POSITION;
    float4 WorldPos                 : POSITION1;

    float2 UV                       : TEX_COORD;
    float4 Color                    : COLOR0;

    nointerpolation uint   TexIndex : TEX_ARRAY_INDEX;
};

struct PSOutput {
    float4 Color : SV_TARGET;
};

void main(in PSInput PSIn, out PSOutput PSOut) {
    float4 color = g_Textures[Constants.textureIDs.x].Sample(g_Textures_sampler, float3(PSIn.UV, PSIn.TexIndex)) * PSIn.Color;
    if (color.a <= 0.0) discard;

    /*float4 roughtness = 0;
    ApplyDecals(PSIn.WorldPos, color, roughtness);*/
    PSOut.Color = color;
}
