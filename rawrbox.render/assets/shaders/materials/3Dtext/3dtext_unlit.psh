#include "pixel_bindless_uniforms.fxh"

Texture2DArray g_Textures[];
SamplerState   g_Sampler;

struct PSInput {
    float4 Pos                      : SV_POSITION;
    float2 UV                       : TEX_COORD;
    float4 Color                    : COLOR;
};

struct PSOutput {
    float4 Color   : SV_TARGET0;
    float4 GPUPick : SV_TARGET1;
};

void main(in PSInput PSIn, out PSOutput PSOut) {
    float a = g_Textures[Constants.textureIDs.x].Sample(g_Sampler, float3(PSIn.UV, 0)).r * PSIn.Color.a;
	if(a <= 0.0) discard;

	PSOut.Color = float4(PSIn.Color.rgb, a);
    PSOut.GPUPick = float4(1,0,0,1);
}
