Texture2D      g_Texture;
SamplerState   g_Texture_sampler; // By convention, texture samplers must use the '_sampler' suffix

cbuffer Constants {
    // GLOBAL ----
    float4   g_ScreenSize;
    // ------------

    // UNIFORMS ----
    float   g_ditherMode;
    float   g_ditherIntensity;
    float   g_ditherDepth;
    float   g_ditherColorDepth;
    float   g_DitherThreshold;
    // ------------
};

struct PSInput {
    float4 Pos   : SV_POSITION;
    float2 UV    : TEX_COORD;
};

struct PSOutput {
    float4 Color : SV_TARGET;
};

#include <dither.fxh>

void main(in PSInput PSIn, out PSOutput PSOut) {
#if defined(DESKTOP_GL) || defined(GL_ES)
    float2 UV = float2(PSIn.UV.x, 1.0 - PSIn.UV.y);
#else
    float2 UV = PSIn.UV;
#endif

    float4 Color = g_Texture.Sample(g_Texture_sampler, UV);

    // Dither -----
    if(g_ditherMode == 0.0) { // SLOW MODE
		Color.rgb = getDither(UV * g_ScreenSize.zw, Color.rgb, g_ditherIntensity * g_ditherDepth / 3.0);
	} else {
		Color.rgb += getDitherFast(UV * g_ScreenSize.zw, 1) * g_ditherIntensity * g_ditherDepth / 3.0;
	}

	// Posterize
	PSOut.Color = saturate(floor(Color * g_ditherColorDepth) / g_ditherColorDepth);
}
