#include "defines.fxh"
#include "particles_uniforms.fxh"

#define READ_PARTICLES
#include "particles.fxh"

Texture2DArray g_Textures[];
SamplerState   g_Sampler;

struct PSInput {
    float4 POS       : SV_POSITION;
    float3 UV        : TEXCOORD0;
    float4 COLOR     : COLOR;

    uint   TextureID : TEX_ARRAY_INDEX;
};

struct PSOutput {
    float4 Color     : SV_TARGET0;
    float4 GPUPick   : SV_TARGET1;
};

void main(in PSInput PSIn, out PSOutput PSOut) {
    float4 color = g_Textures[NonUniformResourceIndex(PSIn.TextureID)].Sample(g_Sampler, PSIn.UV);
    if(color.a <= 0.0) discard;

    PSOut.Color = color * PSIn.COLOR;
	PSOut.GPUPick = float4(0, 0, 0, 0);
}
