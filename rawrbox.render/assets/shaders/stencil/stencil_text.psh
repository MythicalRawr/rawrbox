#include "correction.fxh"

//#ifndef DXCOMPILER
//#    define NonUniformResourceIndex(x) x
//#endif

#ifdef VULKAN
#      define NonUniformResourceIndex(x) x
#endif

Texture2DArray g_Textures[];
SamplerState   g_Sampler;

struct PSInput {
    float4 Pos        : SV_POSITION;
    float4 UV         : TEX_COORD;
    float4 Color      : COLOR;

    uint   TextureID  : TEX_ARRAY_INDEX;
};

struct PSOutput {
    float4 Color : SV_TARGET;
};

void main(in PSInput PSIn, out PSOutput PSOut) {
    float a = g_Textures[NonUniformResourceIndex(PSIn.TextureID)].Sample(g_Sampler, float3(PSIn.UV.xy, PSIn.UV.z)).r * PSIn.Color.a;
	if(a <= 0.0) discard;

	PSOut.Color = float4(PSIn.Color.rgb, a);
}
