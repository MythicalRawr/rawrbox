
#include <lit_uniforms.fxh>

#define READ_LIGHT_GRID
#include <cluster.fxh>
#include <colormap.fxh>

struct PSInput {
    float4 Pos                      : SV_POSITION;
    float2 UV                       : TEX_COORD;
    float4 Color                    : COLOR0;

    nointerpolation float  TexIndex : TEX_ARRAY_INDEX;
};

struct PSOutput {
    float4 Color : SV_TARGET;
};

void main(in PSInput PSIn, out PSOutput PSOut) {
    // show light count per cluster
    uint cluster = getClusterIndex(PSIn.Pos);
    LightGrid grid = getLightGrid(cluster);

    int lights = int(grid.lights);

    // show possible clipping
    if(lights == 0) {
        lights--;
    } else if(lights == MAX_LIGHTS_PER_CLUSTER) {
        lights++;
    }

    float3 lightCountColor = turboColormap(float(lights) / MAX_LIGHTS_PER_CLUSTER);
    PSOut.Color = float4(lightCountColor, 1.0);
}
